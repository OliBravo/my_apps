states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
states <- geojsonio::geojson_read("http://leafletjs.com/examples/choropleth/us-states.js", what = "sp")
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(states) %>%
setView(-96, 37.8, 4)
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
View(m)
m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
View(pal)
m <- m %>%
addPolygons()
library(shiny)
library(leaflet)
library(geojsonio)
## read from a shape file
file <- system.file("examples", "bison.zip", package = "geojsonio")
dir <- tempdir()
unzip(file, exdir = dir)
shpfile <- list.files(dir, pattern = ".shp", full.names = TRUE)
gj <- geojson_read(shpfile, what = "sp")
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addPolygons()
leaflet(m)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
m <- m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
library(RColorBrewer)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
m <- m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
library(scales)
m <- m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m
m <- m %>%
addPolygons()
m
m <- leaflet(gj) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addPolygons()
gj <- geojsonio::geojson_read(shpfile, what = "sp")
class(gj)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
m <- leaflet(gj) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addMarkers()
m
m <- leaflet(gj) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m
gj <- geojsonio::geojson_read(shpfile, what = "sp")
class(gj)
states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
class(states)
m <- leaflet(gj) %>%
setView(16,52, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addMarkers()
m
m <- m %>%
addMarkers() %>%
addPolylines()
m
m <- m %>%
addCircles()
m
m <- leaflet(states) %>%
setView(-96, 37.8, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addCircles()
m
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$density, bins = bins)
m <- m %>% addPolygons(
# fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
View(states)
View(gj)
gj@coords
# states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
states <- geojsonio::geojson_read("json/poland.geojson", what = "sp")
class(states)
m <- m %>%
addPolygons()
m
# states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
states <- geojsonio::geojson_read("json/poland.geojson", what = "sp")
class(states)
View(states)
# states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
states <- geojsonio::geojson_read("json/poland.geojson", what = "sp")
class(states)
m <- leaflet(states) %>%
setView(16,52, 4) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addPolygons()
m
View(states)
statesUS <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
View(statesUS)
View(states)
states@data
states@data$my_value <- rnorm(16)
View(states)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$my_value, bins = bins)
m <- m %>% addPolygons(
# fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
m <- m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
states@data
pal <- colorBin("YlOrRd", domain = states@data$my_value, bins = bins)
m <- m %>% addPolygons(
fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
m <- leaflet(states) %>%
setView(16,52, 8) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addPolygons()
m
m <- leaflet(states) %>%
setView(16,52, 6) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addPolygons()
m
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states@data$my_value, bins = bins)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
pal <- colorBin("YlOrRd", domain = states$my_value, bins = bins)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
View(statesUS)
statesUS@data
states@data$my_value <- sample(1:100, 16)
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = states$my_value, bins = bins)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
pal <- colorBin("YlOrRd", domain = states@data$my_value, bins = bins)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
pal(x = states@data$my_value)
pal <- colorBin("YlOrRd", domain = states@data$my_value, bins = 3)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
pal <- colorBin("YlOrRd", domain = 1:100, bins = 3)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
install.packages("scales")
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
library(shiny)
library(leaflet)
library(geojsonio)
library(RColorBrewer)
library(scales)
statesUS <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
states <- geojsonio::geojson_read("json/poland.geojson", what = "sp")
class(states)
m <- leaflet(states) %>%
setView(16,52, 6) %>%
addProviderTiles("MapBox", options = providerTileOptions(
id = "mapbox.light",
accessToken = Sys.getenv('MAPBOX_ACCESS_TOKEN')))
m <- m %>%
addPolygons()
m
bins <- c(0, 10, 20, 50, 100, 200, 500, 1000, Inf)
pal <- colorBin("YlOrRd", domain = 1:100, bins = 3)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- m %>% addPolygons(
fillColor = ~pal(states@data$my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
states@data$my_value <- sample(1:100, 16)
m <- m %>% addPolygons(
fillColor = ~pal(states@data$my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- m %>% addPolygons(
fillColor = ~pal(my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m <- m %>% addPolygons(
fillColor = ~pal(states@data$my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
m
leaflet(states) %>%
setView(16,52, 6) %>%
addPolygons(
# fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~density, opacity = 0.7, title = NULL,
position = "bottomright")
leaflet(states) %>%
setView(16,52, 6) %>%
addPolygons(
# fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~my_value, opacity = 0.7, title = NULL,
position = "bottomright")
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states$name, states@data$my_value
) %>% lapply(htmltools::HTML)
leaflet(states) %>%
setView(16,52, 6) %>%
addPolygons(
# fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto")) %>%
addLegend(pal = pal, values = ~my_value, opacity = 0.7, title = NULL,
position = "bottomright")
View(labels)
labels <- sprintf(
"<strong>%s</strong><br/>%g people / mi<sup>2</sup>",
states@data$name, states@data$my_value
) %>% lapply(htmltools::HTML)
View(labels)
leaflet(states) %>%
setView(16,52, 6) %>%
addPolygons(
# fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
labels <- sprintf(
"<strong>%s</strong><br/>%g mln PLN sales",
states@data$name, states@data$my_value
) %>% lapply(htmltools::HTML)
leaflet(states) %>%
setView(16,52, 6) %>%
addPolygons(
# fillColor = ~pal(density),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7,
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labels,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "15px",
direction = "auto"))
m <- m %>% addPolygons(
fillColor = ~pal(states@data$my_value),
weight = 2,
opacity = 1,
color = "white",
dashArray = "3",
fillOpacity = 0.7)
remove.packages("scales")
install.packages("scales")
